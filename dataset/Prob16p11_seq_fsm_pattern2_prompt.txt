
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  clk
 - input  reset
 - input  in_
 - output out

The module should implement a Mealy finite-state machine (FSM) with an
active-high synchronous reset. The FSM should recognize the target
pattern 1110 in the binary sequence sampled at the input one bit per
cycle. When the FSM detects the target pattern 1110, it should
(combinationally) set the output to one on the same cycle it sees the
final bit of the target pattern. The FSM should detect overlapping target
patterns. Here is an example execution trace.

   cycle | in_ out
  -------+-------------
     0   | 0   0
     1   | 1   0
     2   | 1   0
     3   | 1   0
     4   | 1   0
     5   | 0   1
     6   | 1   0
     7   | 0   0

Assume all sequential logic is triggered on the positive edge of the
clock.

