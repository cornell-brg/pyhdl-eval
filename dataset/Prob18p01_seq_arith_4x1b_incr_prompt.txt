
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  clk
 - input  reset
 - input  in_
 - output out

The module should implement an 4-bit bit-serial incrementer which adds
one to an 4-bit value which is sampled at the input one bit per cycle.
The least-significant bit should be the first bit input into the
bit-serial incrementer and the first bit output from the bit-serial
incrementer. There should be no latency through the incrementer (i.e.,
the output should be a combinational function of the input). The
incrementer should be able to achieve full throughput, i.e., it should be
able to accept a new input bit every cycle and produce a valid output bit
every cycle. Here is an example execution trace which increments three
values: 0001, 0010, and 0011.

   cycle | in_ out
  -------+-------------
     0   | 1   0
     1   | 0   1
     2   | 0   0
     3   | 0   0
     4   | 0   1
     5   | 1   1
     6   | 0   0
     7   | 0   0
     8   | 1   0
     9   | 1   0
    10   | 0   1
    11   | 0   0

The module should include an active-high synchronous reset; all internal
state should be reset appropriately when the reset input is one. Assume
all sequential logic is triggered on the positive edge of the clock.
Assume all values are encoded as two's complement binary numbers.

