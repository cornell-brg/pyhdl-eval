
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  clk
 - input  in_ (8 bits)
 - output max_switching

The module should detect a "worst case switching event" (i.e., when
adjacent bits switch in opposite directions simultaneously). In other
words, the module should detect when the input switches from 01010101 to
10101010 or when the input switches from 10101010 to 01010101. On the
cycle a worst case switching event is detected, the output max_switching
should be (combinationally) set to one and set to zero otherwise. Here is
an example execution trace. An X indicates that the output bit is
undefined because it is the first cycle and thus there is no previous
cycle.

   cycle | in_       detected
  -------+---------------------
     0   | 0000_0000 X
     1   | 0000_0000 0
     2   | 0001_0001 0
     3   | 0101_0101 0
     4   | 1010_1010 1
     5   | 1010_1010 0
     6   | 0001_0001 0
     7   | 1010_1010 0
     8   | 0101_0101 1
     9   | 1010_1010 1
    10   | 0000_0000 0

Assume all sequential logic is triggered on the positive edge of the
clock.

