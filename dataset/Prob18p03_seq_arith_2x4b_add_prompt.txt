
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  clk
 - input  reset
 - input  in0 (4 bits)
 - input  in1 (4 bits)
 - output out (4 bits)

The module should implement a two-input serial adder which performs an
8-bit addition over two cycles four bits at a time. The least-significant
four bits should be the first bits input into the serial adder and the
first bits output from the serial adder. There should be no latency
through the adder (i.e., the output should be a combinational function of
the inputs). The adder should be able to achieve full throughput, i.e.,
it should be able to accept four new input bits every cycle and produce
four valid output bits every cycle. Here is an example execution trace
which adds 0011_1010 and 0000_1011.

   cycle | in0  in1  out
  -------+----------------
     0   | 1010 1011 0101
     1   | 0011 0000 0100

The module should include an active-high synchronous reset; all internal
state should be reset appropriately when the reset input is one. Assume
all sequential logic is triggered on the positive edge of the clock.
Assume all values are encoded as two's complement binary numbers.

