
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  state      (3 bits)
 - input  in_        (2 bits)
 - output state_next (3 bits)
 - output out0
 - output out1

The module should implement the state transition and output logic for the
Moore finite-state machine (FSM) described by the following table.

   Current | Next State  Next State  Next State  Next State | Output  Output
   State   | if in_=00   if in_=01   if in_=10   if in_=11  |   0       1
  ---------+------------------------------------------------+----------------
      A    |     A           B           A           E      |   0       0
      B    |     C           B           A           E      |   0       0
      C    |     A           D           A           E      |   0       0
      D    |     C           B           A           E      |   1       0
      E    |     F           F           A           E      |   0       1
      F    |     A           A           A           A      |   0       1

The state machine should use the following state encoding.

 - A : 0
 - B : 1
 - C : 2
 - D : 3
 - E : 4
 - F : 5

If the input state is not valid (e.g., input state is 6 or 7) then the
outputs should all be zero. The module should only implement the
combinational state transition logic and output logic and should not
include any sequential state.

