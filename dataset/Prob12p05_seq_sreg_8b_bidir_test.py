#=========================================================================
# Prob12p05_seq_sreg_8b_bidir_test
#=========================================================================
# SPDX-License-Identifier: MIT
# Author : Christopher Batten, NVIDIA
# Date   : May 20, 2024

import pytest

from pyhdl_eval.cfg  import Config, InputPort, OutputPort
from pyhdl_eval.core import run_sim
from pyhdl_eval      import strategies as pst

from hypothesis import settings, given
from hypothesis import strategies as st

#-------------------------------------------------------------------------
# Configuration
#-------------------------------------------------------------------------

config = Config(
  ports = [
    ( "clk",   InputPort (1) ),
    ( "reset", InputPort (1) ),
    ( "en",    InputPort (1) ),
    ( "ld",    InputPort (1) ),
    ( "pin",   InputPort (8) ),
    ( "op",    InputPort (1) ),
    ( "pout",  OutputPort(8) ),
  ],
)

#-------------------------------------------------------------------------
# test_case_single_ld_left
#-------------------------------------------------------------------------

def test_case_single_ld_left( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1101_0110, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
  ])

#-------------------------------------------------------------------------
# test_case_single_ld_right
#-------------------------------------------------------------------------

def test_case_single_ld_right( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 1, 0b1101_0110, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
  ])

#-------------------------------------------------------------------------
# test_case_multi_ld_left
#-------------------------------------------------------------------------

def test_case_multi_ld_left( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1101_0110, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b0110_0101, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1100_1001, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1111_1111, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
  ])

#-------------------------------------------------------------------------
# test_case_multi_ld_right
#-------------------------------------------------------------------------

def test_case_multi_ld_right( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 1, 0b1101_0110, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 1, 0b0110_0101, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 1, 0b1100_1001, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 0, 1, 0b1111_1111, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 1, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
    ( 0, 0, 0, 0b0000_0000, 1 ),
  ])

#-------------------------------------------------------------------------
# test_case_enable
#-------------------------------------------------------------------------

def test_case_enable( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1111_1111, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
  ])

#-------------------------------------------------------------------------
# test_case_directed_reset
#-------------------------------------------------------------------------

@pytest.mark.multi_reset
def test_case_directed_reset( pytestconfig ):
  run_sim( pytestconfig, __file__, config,
  [ # rs en ld pin          op
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 1, 0b1111_1111, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 1, 0, 0, 0b0000_0000, 0 ),
    ( 1, 0, 0, 0b0000_0000, 0 ),
    ( 1, 0, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 1, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
    ( 0, 0, 0, 0b0000_0000, 0 ),
  ])

#-------------------------------------------------------------------------
# test_case_random
#-------------------------------------------------------------------------
# We need to make sure our random tests are long enough so we can
# observe the output of what we are shifting into the shift register.

@settings(derandomize=True,deadline=1000,max_examples=20)
@given(
  st.lists(
    st.tuples(
      st.just(0), pst.bits(1), pst.bits(1), pst.bits(8), pst.bits(1)
    ),
    min_size=30
  ))
def test_case_random( pytestconfig, test_vectors ):
  run_sim( pytestconfig, __file__, config, test_vectors )

