
Implement a hardware module named TopModule with the following interface.
All input and output ports are one bit unless otherwise specified.

 - input  clk
 - input  reset
 - input  in_ (8 bits)
 - output out (8 bits)

The module should implement an 8-bit accumulator with an internal 8-bit
accumulator register and an active-high synchronous reset. The internal
accumulator register should be reset to zero when the reset input is one.
There should be no latency through the accumulator (i.e., the output
should be a combinational function of the inputs). The accumulator should
be able to achieve full throughput, i.e., it should be able to accept a
new input every cycle and produce a valid output every cycle. Here is an
example execution trace.

   cycle | in_ out
  -------+-----------
     0   | 00  00
     1   | 01  01
     1   | 02  03
     1   | 04  07
     1   | 04  0b

Assume all sequential logic is triggered on the positive edge of the
clock. Assume all values are encoded as two's complement binary numbers.

